{
  "$schema": "http://json-schema.org/schema#",
  "type": "object",
  "properties": {
    "service": {
      "description": "spark-history specific configuration",
      "type": "object",
      "properties": {
        "warehouseDir": {
          "description": "directory of access logs",
          "type": "string",
          "default": "/user/hive/warehouse/",
          "x-form": {
            "value": "s3a://{{s3.AWS_BUCKET_NAME}}/hive-warehouse"
          },
          "x-onyxia": {
            "overwriteDefaultWith": "s3a://{{s3.AWS_BUCKET_NAME}}/hive-warehouse"
          }
        },
        "image": {
          "description": "image docker",
          "type": "object",
          "properties": {
            "pullPolicy": {
              "type": "string",
              "description": "option when pulling the docker image",
              "default": "IfNotPresent",
              "enum": ["IfNotPresent", "Always", "Never"]
            },
            "version": {
              "description": "supported versions",
              "type": "string",
              "enum": [
                "inseefrlab/jupyter-datascience:py3.9.12-spark3.2.1-v0.0.2",
                "inseefrlab/jupyter-datascience:py3.7.6-spark3.1.1"
              ],
              "pattern": "^[a-z0-9-_./]+(:[a-z0-9-_.]+)?$",
              "hidden": {
                "value": true,
                "path": "service/image/custom/enabled"
              },
              "default": "inseefrlab/jupyter-datascience:py3.9.12-spark3.2.1-v0.0.2"
            },
            "custom": {
              "description": "use a custom jupyter docker image",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "custom image",
                  "type": "boolean",
                  "description": "use a custom jupyter docker image",
                  "default": false
                },
                "version": {
                  "description": "jupyter unsupported version",
                  "type": "string",
                  "default": "inseefrlab/jupyter-datascience:py3.9.12-spark3.2.1-v0.0.1",
                  "pattern": "^[a-z0-9-_./]+(:[a-z0-9-_.]+)?$",
                  "hidden": {
                    "value": false,
                    "path": "service/image/custom/enabled"
                  }
                }
              }
            }
          }
        }
      }
    },
    "s3": {
      "description": "Configuration of temporary identity",
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Add S3 temporary identity inside your environment",
          "default": true
        },
        "accessKeyId": {
          "description": "AWS Access Key",
          "type": "string",
          "x-form": {
            "value": "{{s3.AWS_ACCESS_KEY_ID}}"
          },
          "x-onyxia": {
            "overwriteDefaultWith": "{{s3.AWS_ACCESS_KEY_ID}}"
          },
          "hidden": {
            "value": false,
            "path": "s3/enabled"
          }
        },
        "endpoint": {
          "description": "AWS S3 Endpoint",
          "type": "string",
          "x-form": {
            "value": "{{s3.AWS_S3_ENDPOINT}}"
          },
          "x-onyxia": {
            "overwriteDefaultWith": "{{s3.AWS_S3_ENDPOINT}}"
          },
          "hidden": {
            "value": false,
            "path": "s3/enabled"
          }
        },
        "defaultRegion": {
          "description": "AWS S3 default region",
          "type": "string",
          "x-form": {
            "value": "{{s3.AWS_DEFAULT_REGION}}"
          },
          "x-onyxia": {
            "overwriteDefaultWith": "{{s3.AWS_DEFAULT_REGION}}"
          },
          "hidden": {
            "value": false,
            "path": "s3/enabled"
          }
        },
        "secretAccessKey": {
          "description": "AWS S3 secret access key",
          "type": "string",
          "x-form": {
            "value": "{{s3.AWS_SECRET_ACCESS_KEY}}"
          },
          "x-onyxia": {
            "overwriteDefaultWith": "{{s3.AWS_SECRET_ACCESS_KEY}}"
          },
          "hidden": {
            "value": false,
            "path": "s3/enabled"
          }
        },
        "sessionToken": {
          "description": "AWS S3 session Token",
          "type": "string",
          "x-form": {
            "value": "{{s3.AWS_SESSION_TOKEN}}"
          },
          "x-onyxia": {
            "overwriteDefaultWith": "{{s3.AWS_SESSION_TOKEN}}"
          },
          "hidden": {
            "value": false,
            "path": "s3/enabled"
          }
        }
      }
    },
    "security": {
      "description": "security specific configuration",
      "type": "object",
      "properties": {
        "networkPolicy": {
          "type": "object",
          "description": "Define access policy to the service",
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enable network policy",
              "description": "Only pod from the same namespace will be allowed",
              "default": true,
              "x-form": {
                "value": "{{region.defaultNetworkPolicy}}"
              },
              "x-onyxia": {
                "overwriteDefaultWith": "region.defaultNetworkPolicy"
              }
            }
          }
        }
      }
    },
    "listener": {
      "description": "Configuration of hive meta store listener",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "enable hive metastore listener",
          "type": "boolean",
          "default": false
        },
        "kafkaBrokerUrl": {
          "description": "kafka broker url for pushing your hive metastore event",
          "type": "string",
          "default": "change.me",
          "hidden": {
            "value": false,
            "path": "listener/enabled"
          },
          "x-form": {
            "value": "{{region.kafka.url}}"
          },
          "x-onyxia": {
            "overwriteDefaultWith": "{{region.kafka.url}}"
          }
        },
        "kafkaTopicName": {
          "description": "kafka topic name for pushing your hive metastore event",
          "type": "string",
          "default": "changeMe",
          "hidden": {
            "value": false,
            "path": "listener/enabled"
          },
          "x-form": {
            "value": "{{region.kafka.topicName}}"
          },
          "x-onyxia": {
            "overwriteDefaultWith": "{{region.kafka.topicName}}"
          }
        },
        "domainNamespace": {
          "description": "domain name where your hive metastore is located inside your organization",
          "type": "string",
          "x-form": {
            "value": "{{project.id}}"
          },
          "x-onyxia": {
            "overwriteDefaultWith": "{{project.id}}"
          },
          "default": "changeMe",
          "hidden": {
            "value": false,
            "path": "listener/enabled"
          }
        }
      }
    },
    "global": {
      "description": "postgres specific configuration",
      "type": "object",
      "title": "Database",
      "properties": {
        "postgresql": {
          "description": "postgres specific configuration",
          "type": "object",
          "title": "Database",
          "properties": {
            "auth": {
              "description": "postgres specific configuration",
              "type": "object",
              "title": "Database",
              "properties": {
                "username": {
                  "type": "string",
                  "title": "Admin user",
                  "default": "admin",
                  "x-form": {
                    "value": "{{project.id}}"
                  },
                  "x-onyxia": {
                    "overwriteDefaultWith": "{{project.id}}"
                  }
                },
                "password": {
                  "type": "string",
                  "title": "Password",
                  "default": "changeme",
                  "x-form": {
                    "value": "{{project.password}}"
                  },
                  "x-onyxia": {
                    "overwriteDefaultWith": "{{project.password}}"
                  }
                },
                "database": {
                  "description": "Name for the default database that is created when the image is first started.",
                  "type": "string",
                  "title": "Database",
                  "default": "metastore"
                }
              }
            }
          }
        }
      }
    }
  }
}
