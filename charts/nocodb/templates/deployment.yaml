{{- $fullName := include "library-chart.fullname" . -}}
{{- $initContainerName := printf "%s-%s" $fullName "init-data" | trunc 63 | trimSuffix "-" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "library-chart.fullname" . }}
  labels:
    {{- include "library-chart.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "library-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "library-chart.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "library-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.service.image.repository }}:{{ .Values.service.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.service.image.pullPolicy }}
          env:
          - name: NC_ADMIN_EMAIL
            value: {{ .Values.security.mail }}
          - name: NC_ADMIN_PASSWORD
            value: {{ .Values.security.password }}
          - name: DATABASE_URL
            value: "pg://{{ .Values.postgresql.fullnameOverride }}:5432?u={{ .Values.global.postgresql.auth.username }}&p={{ .Values.global.postgresql.auth.password }}&db={{ .Values.global.postgresql.auth.database}}"
          ports:
            - name: http
              containerPort: {{ .Values.networking.nocodb.port}}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      initContainers:
        - name: wait-for-postgresql
          image: "alpine"
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - |
              until printf "." && nc -z -w 2 {{ .Values.postgresql.fullnameOverride }} 5432; do
                  sleep 2;
              done;
              echo 'PostgreSQL OK âœ“'  
              
      {{- with .Values.nodeSelector }} 
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
